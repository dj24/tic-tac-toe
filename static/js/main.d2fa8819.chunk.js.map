{"version":3,"sources":["app/constants.js","features/board/boardSlice.js","features/gameState/gameStateSlice.js","hooks/useGame.js","features/board/Cross.js","features/board/Zero.js","features/board/Board.js","features/startScreen/Button.js","features/startScreen/StartScreen.js","features/modal/CloseButton.js","features/modal/Modal.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["players","gameStates","WINNING_PATTERNS","BLANK_BOARD","boardSlice","createSlice","name","initialState","cells","player","reducers","reset","state","takeTurn","action","payload","actions","gameStateSlice","value","setGameState","useGame","useSelector","board","gameState","dispatch","useDispatch","findWinner","useCallback","some","pattern","every","index","useEffect","cell","console","log","handleCellClick","handleStartClick","SCALE_DURATION","Cross","motion","svg","width","height","viewBox","fill","xmlns","initial","animate","path","style","originX","originY","strokeDasharray","strokeDashoffset","scale","transition","delay","duration","d","strokeWidth","strokeLinecap","LINE_STAGGER","Zero","clipPath","circle","rotate","type","mass","stiffness","damping","cx","cy","r","id","Board","div","opacity","x","exit","className","map","i","onClick","Button","props","button","stiffnesss","StartScreen","layout","h1","y","p","CloseButton","Modal","children","restDelta","App","main","MotionConfig","AnimateSharedLayout","AnimatePresence","exitBeforeEnter","store","configureStore","reducer","boardReducer","gameStateReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d2fa8819.chunk.js","sourcesContent":["const players = {\n  CROSS: \"cross\",\n  ZERO: \"zero\",\n};\n\nconst gameStates = {\n  START: \"start\",\n  IN_PROGRESS: \"in progress\",\n  CROSS_WINS: \"cross wins\",\n  ZERO_WINS: \"zero wins\",\n  DRAW: \"draw\",\n};\n\nconst horizontalTop = [0, 1, 2];\nconst horizontalMiddle = [3, 4, 5];\nconst horizontalBottom = [6, 7, 8];\nconst verticalLeft = [0, 3, 6];\nconst verticalMiddle = [1, 4, 7];\nconst verticalRight = [2, 5, 8];\nconst diagonalPositive = [6, 4, 2];\nconst diagonalNegative = [0, 4, 8];\n\nconst WINNING_PATTERNS = [\n  horizontalTop,\n  horizontalMiddle,\n  horizontalBottom,\n  verticalLeft,\n  verticalMiddle,\n  verticalRight,\n  diagonalPositive,\n  diagonalNegative,\n];\n\nexport { players, gameStates, WINNING_PATTERNS };\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { players } from \"../../app/constants\";\n\nconst BLANK_BOARD = [null, null, null, null, null, null, null, null, null];\n\nexport const boardSlice = createSlice({\n  name: \"board\",\n  initialState: {\n    cells: BLANK_BOARD,\n    player: players.CROSS,\n  },\n  reducers: {\n    reset: (state) => {\n      state.cells = BLANK_BOARD;\n      state.player = players.CROSS;\n    },\n    takeTurn: (state, action) => {\n      state.cells[action.payload] = state.player;\n      state.player =\n        state.player === players.ZERO ? players.CROSS : players.ZERO;\n    },\n  },\n});\n\nexport const { reset, takeTurn } = boardSlice.actions;\n\nexport default boardSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { gameStates } from \"../../app/constants\";\n\nexport const gameStateSlice = createSlice({\n  name: \"board\",\n  initialState: {\n    value: gameStates.START,\n  },\n  reducers: {\n    setGameState: (state, action) => {\n      state.value = action.payload;\n    },\n  },\n});\n\nexport const { setGameState } = gameStateSlice.actions;\n\nexport default gameStateSlice.reducer;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { takeTurn, reset } from \"../features/board/boardSlice\";\nimport { setGameState } from \"../features/gameState/gameStateSlice\";\nimport { gameStates, WINNING_PATTERNS, players } from \"../app/constants\";\nimport { useCallback, useEffect } from \"react\";\n\nconst useGame = () => {\n  const player = useSelector((state) => state.board.player);\n  const cells = useSelector((state) => state.board.cells);\n  const gameState = useSelector((state) => state.gameState.value);\n\n  const dispatch = useDispatch();\n\n  const findWinner = useCallback(\n    (player) =>\n      WINNING_PATTERNS.some((pattern) =>\n        pattern.every((index) => cells[index] === player)\n      ),\n    [cells]\n  );\n\n  useEffect(() => {\n    if (findWinner(players.CROSS)) {\n      dispatch(setGameState(gameStates.CROSS_WINS));\n    } else if (findWinner(players.ZERO)) {\n      dispatch(setGameState(gameStates.ZERO_WINS));\n    } else if (\n      cells.every((cell) => {\n        console.log({ cell });\n        return cell !== null;\n      })\n    ) {\n      dispatch(setGameState(gameStates.DRAW));\n    }\n  }, [cells, findWinner, dispatch]);\n\n  const handleStartClick = () => {\n    dispatch(reset());\n    dispatch(setGameState(gameStates.IN_PROGRESS));\n  };\n\n  const handleCellClick = (index) => () => {\n    // if the selected cell is filled, do nothing\n    if (cells[index] !== null) {\n      return;\n    }\n    dispatch(takeTurn(index));\n    if (gameState === gameStates.START) {\n      dispatch(setGameState(gameStates.IN_PROGRESS));\n    }\n  };\n\n  return { player, cells, gameState, handleCellClick, handleStartClick };\n};\n\nexport default useGame;\n","import { motion } from \"framer-motion\";\n\nconst SCALE_DURATION = 0.075;\nconst LINE_STAGGER = 0.225;\n\nconst Cross = () => {\n  return (\n    <motion.svg\n      width=\"100\"\n      height=\"100\"\n      viewBox=\"0 0 100 100\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      initial=\"hidden\"\n      animate=\"show\"\n    >\n      <motion.path\n        style={{ originX: 0, originY: 1, strokeDasharray: 117 }}\n        initial={{ strokeDashoffset: 116, scale: 0 }}\n        animate={{\n          strokeDashoffset: 0,\n          scale: 1,\n        }}\n        transition={{\n          strokeDashoffset: { delay: SCALE_DURATION },\n          scale: {\n            duration: SCALE_DURATION,\n          },\n        }}\n        d=\"M8.5 91.5L91.6919 8.6429\"\n        strokeWidth=\"16\"\n        strokeLinecap=\"round\"\n      />\n      <motion.path\n        style={{\n          originX: 0,\n          originY: 0,\n          strokeDasharray: 117,\n        }}\n        initial={{ strokeDashoffset: 116, scale: 0 }}\n        animate={{\n          strokeDashoffset: 0,\n          scale: 1,\n        }}\n        transition={{\n          strokeDashoffset: { delay: LINE_STAGGER + SCALE_DURATION },\n          scale: {\n            delay: LINE_STAGGER,\n            duration: SCALE_DURATION,\n          },\n        }}\n        d=\"M8.5 8.5L91.5 91.5\"\n        strokeWidth=\"16\"\n        strokeLinecap=\"round\"\n      />\n    </motion.svg>\n  );\n};\n\nexport default Cross;\n","import { motion } from \"framer-motion\";\n\nconst Zero = () => {\n  return (\n    <svg\n      width=\"100\"\n      height=\"100\"\n      viewBox=\"0 0 100 100\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0_1:22)\">\n        <motion.circle\n          style={{ strokeDasharray: 264, rotate: -90 }}\n          initial={{ scale: 0, strokeDashoffset: 264 }}\n          animate={{ scale: 1, strokeDashoffset: 0 }}\n          transition={{\n            scale: {\n              duration: 0.075,\n            },\n            strokeDashoffset: {\n              type: \"spring\",\n              mass: 10,\n              stiffness: 800,\n              damping: 200,\n              delay: 0.075,\n            },\n          }}\n          cx=\"50\"\n          cy=\"49.9999\"\n          r=\"42\"\n          strokeWidth=\"16\"\n          strokeLinecap=\"round\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_1:22\">\n          <rect width=\"100\" height=\"100\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport default Zero;\n","import { motion } from \"framer-motion\";\n\nimport { players } from \"../../app/constants\";\nimport useGame from \"../../hooks/useGame\";\n\nimport Cross from \"./Cross\";\nimport Zero from \"./Zero\";\n\nconst Board = () => {\n  const { cells, player, handleCellClick } = useGame();\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, x: 200 }}\n      animate={{ opacity: 1, x: 0 }}\n      exit={{ opacity: 1 }}\n      className=\"board\"\n    >\n      {cells?.map((cell, i) => {\n        let className = \"hover-container\";\n        if (player === players.ZERO && cell === null) {\n          className += \" hover:bg-blue-100\";\n        }\n        if (player === players.CROSS && cell === null) {\n          className += \" hover:bg-red-100\";\n        }\n        return (\n          <motion.div key={i} className=\"cell\" onClick={handleCellClick(i)}>\n            <motion.div className={className}>\n              {cell === players.ZERO && <Zero />}\n              {cell === players.CROSS && <Cross />}\n            </motion.div>\n          </motion.div>\n        );\n      })}\n    </motion.div>\n  );\n};\n\nexport default Board;\n","import { motion } from \"framer-motion\";\n\nconst Button = (props) => {\n  return (\n    <motion.button\n      className=\"w-full text-lg sm:w-auto px-4 py-2 rounded-lg bg-purple-500 hover:bg-purple-600 text-white\"\n      {...props}\n    />\n  );\n};\n\nexport default Button;\n","import { motion } from \"framer-motion\";\n\nimport useGame from \"../../hooks/useGame\";\nimport Button from \"./Button\";\n\nconst transition = {\n  type: \"spring\",\n  stiffnesss: 800,\n  damping: 20,\n};\n\nconst StartScreen = () => {\n  const { handleStartClick } = useGame();\n\n  return (\n    <motion.div\n      layout\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0, x: -200 }}\n      transition={{ duration: 0.4 }}\n      className=\"mt-12 sm:mr-8 max-w-lg p-6\"\n    >\n      <motion.h1\n        initial={{ opacity: 0, y: 50 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ ...transition, delay: 0.2 }}\n        className=\"text-4xl sm:text-5xl lg:text-7xl font-black flex mb-6 \"\n      >\n        Tic Tac Toe\n      </motion.h1>\n      <motion.p\n        initial={{ opacity: 0, y: 50 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ ...transition, delay: 0.4 }}\n        className=\"text-xl sm:text-2xl text-gray-400 mb-6\"\n      >\n        A game for 2 players: Match 3 cells in a row before the other player to\n        win!\n      </motion.p>\n      <Button\n        initial={{ opacity: 0, y: 50 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ ...transition, delay: 0.6 }}\n        onClick={handleStartClick}\n      >\n        Start Game\n      </Button>\n    </motion.div>\n  );\n};\n\nexport default StartScreen;\n","const CloseButton = (props) => {\n  return (\n    <button className=\"text-black hover:bg-gray-100 rounded-lg p-2\" {...props}>\n      <svg\n        viewBox=\"0 0 100 100\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        initial=\"hidden\"\n        animate=\"show\"\n        className=\"stroke-current w-4 h-4\"\n      >\n        <path\n          d=\"M8.5 91.5L91.6919 8.6429\"\n          strokeWidth=\"16\"\n          strokeLinecap=\"round\"\n        />\n        <path d=\"M8.5 8.5L91.5 91.5\" strokeWidth=\"16\" strokeLinecap=\"round\" />\n      </svg>\n    </button>\n  );\n};\n\nexport default CloseButton;\n","import { motion } from \"framer-motion\";\n\nimport useGame from \"../../hooks/useGame\";\nimport Button from \"../startScreen/Button\";\nimport CloseButton from \"./CloseButton\";\n\nconst Modal = ({ children }) => {\n  const { handleStartClick } = useGame();\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      transition={{ duration: 0.2 }}\n      className=\"w-full h-full fixed top-0 bg-black bg-opacity-25 flex items-center justify-center\"\n    >\n      <motion.div\n        initial={{ scale: 0.9, opacity: 0 }}\n        animate={{ scale: 1, opacity: 1 }}\n        exit={{ scale: 0.9, opacity: 0 }}\n        transition={{\n          type: \"spring\",\n          stiffness: 800,\n          damping: 100,\n          restDelta: 0.0001,\n        }}\n        className=\"rounded-xl w-full max-w-sm bg-white flex-col m-4\"\n      >\n        <header className=\"border-b px-6 py-4 font-semibold text-xl flex justify-between items-center\">\n          <span>Game Result</span>\n          <CloseButton onClick={handleStartClick} />\n        </header>\n        <main className=\"p-6 flex flex-col\">\n          <div className=\"text-xl\">{children}</div>\n        </main>\n        <footer className=\"border-t p-6 flex flex-col\">\n          <Button onClick={handleStartClick}>Play Again</Button>\n        </footer>\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\n\nimport {\n  AnimatePresence,\n  AnimateSharedLayout,\n  motion,\n  MotionConfig,\n} from \"framer-motion\";\n\nimport useGame from \"./hooks/useGame\";\nimport { gameStates } from \"./app/constants\";\nimport Board from \"./features/board/Board\";\nimport PlayerIndicator from \"./features/board/PlayerIndicator\";\nimport StartScreen from \"./features/startScreen/StartScreen\";\nimport Modal from \"./features/modal/Modal\";\n\nconst App = () => {\n  const { gameState } = useGame();\n  return (\n    <motion.main className=\"w-full h-screen flex flex-col-reverse lg:flex-row items-center justify-center\">\n      <MotionConfig\n        transition={{\n          type: \"spring\",\n          mass: 10,\n          stiffness: 800,\n          damping: 200,\n          restDelta: 0.001,\n        }}\n      >\n        <AnimateSharedLayout>\n          <AnimatePresence exitBeforeEnter>\n            {gameState === gameStates.START ? (\n              <StartScreen key={1} />\n            ) : (\n              <motion.div layout>\n                <Board />\n              </motion.div>\n            )}\n            {gameState === gameStates.CROSS_WINS && (\n              <Modal key={\"cross-modal\"}>\n                🎉 <span className=\"text-red-500\">Cross</span> Wins!\n              </Modal>\n            )}\n            {gameState === gameStates.ZERO_WINS && (\n              <Modal key={\"zero-modal\"}>\n                🎉 <span className=\"text-blue-500\">Zero</span> Wins!\n              </Modal>\n            )}\n            {gameState === gameStates.DRAW && (\n              <Modal key={\"draw-modal\"}>🙅‍♂️ Draw!</Modal>\n            )}\n          </AnimatePresence>\n        </AnimateSharedLayout>\n      </MotionConfig>\n\n      {/* <PlayerIndicator /> */}\n    </motion.main>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport boardReducer from \"../features/board/boardSlice\";\nimport gameStateReducer from \"../features/gameState/gameStateSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    board: boardReducer,\n    gameState: gameStateReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}