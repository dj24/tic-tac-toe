{"version":3,"sources":["app/constants.js","features/board/boardSlice.js","features/gameState/gameStateSlice.js","hooks/useGame.js","features/board/Cross.js","features/board/Zero.js","features/board/Board.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["players","gameStates","initialState","cells","player","boardSlice","createSlice","name","reducers","reset","state","takeTurn","action","payload","actions","gameStateSlice","value","setGameState","useGame","useSelector","board","gameState","dispatch","useDispatch","handleCellClick","index","handleStartClick","SCALE_DURATION","Cross","motion","svg","width","height","viewBox","fill","xmlns","initial","animate","path","style","originX","originY","strokeDasharray","strokeDashoffset","scale","transition","delay","duration","d","strokeWidth","strokeLinecap","LINE_STAGGER","Zero","clipPath","circle","rotate","type","mass","stiffness","damping","cx","cy","r","id","Board","div","y","opacity","exit","className","map","cell","i","onClick","Button","props","headingVariants","show","delayChildren","staggerChildren","spanVariants","hidden","StartScreen","h1","variants","span","App","MotionConfig","restDelta","AnimatePresence","exitBeforeEnter","store","configureStore","reducer","boardReducer","gameStateReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e367dc12.chunk.js","sourcesContent":["const players = {\n  CROSS: \"cross\",\n  ZERO: \"zero\",\n};\n\nconst gameStates = {\n  START: \"start\",\n  IN_PROGRESS: \"in progress\",\n  CROSS_WINS: \"cross wins\",\n  ZERO_WINS: \"zero wins\",\n  DRAW: \"draw\",\n};\n\nconst horizontalTop = [0, 1, 2];\nconst horizontalMiddle = [3, 4, 5];\nconst horizontalBottom = [6, 7, 8];\nconst verticalLeft = [0, 3, 6];\nconst verticalMiddle = [1, 4, 7];\nconst verticalRight = [2, 5, 8];\nconst diagonalPositive = [6, 4, 2];\nconst diagonalNegative = [0, 4, 8];\n\nconst WINNING_PATTERNS = [\n  horizontalTop,\n  horizontalMiddle,\n  horizontalBottom,\n  verticalLeft,\n  verticalMiddle,\n  verticalRight,\n  diagonalPositive,\n  diagonalNegative,\n];\n\nexport { players, gameStates, WINNING_PATTERNS };\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { players } from \"../../app/constants\";\n\nconst BLANK_BOARD = [null, null, null, null, null, null, null, null, null];\n\nconst initialState = {\n  cells: BLANK_BOARD,\n  player: players.CROSS,\n};\n\nexport const boardSlice = createSlice({\n  name: \"board\",\n  initialState,\n  reducers: {\n    reset: (state) => {\n      state = initialState;\n    },\n    takeTurn: (state, action) => {\n      state.cells[action.payload] = state.player;\n      state.player =\n        state.player === players.ZERO ? players.CROSS : players.ZERO;\n    },\n  },\n});\n\nexport const { reset, takeTurn } = boardSlice.actions;\n\nexport default boardSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { gameStates } from \"../../app/constants\";\n\nexport const gameStateSlice = createSlice({\n  name: \"board\",\n  initialState: {\n    value: gameStates.START,\n  },\n  reducers: {\n    setGameState: (state, action) => {\n      state.value = action.payload;\n    },\n  },\n});\n\nexport const { setGameState } = gameStateSlice.actions;\n\nexport default gameStateSlice.reducer;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { takeTurn } from \"../features/board/boardSlice\";\nimport { setGameState } from \"../features/gameState/gameStateSlice\";\nimport { gameStates } from \"../app/constants\";\n\nconst useGame = () => {\n  const player = useSelector((state) => state.board.player);\n  const cells = useSelector((state) => state.board.cells);\n  const gameState = useSelector((state) => state.gameState.value);\n\n  const dispatch = useDispatch();\n\n  const handleStartClick = () => {\n    dispatch(setGameState(gameStates.IN_PROGRESS));\n  };\n\n  const handleCellClick = (index) => () => {\n    // if the selected cell is filled, do nothing\n    if (cells[index] !== null) {\n      return;\n    }\n    dispatch(takeTurn(index));\n  };\n\n  return { player, cells, gameState, handleCellClick, handleStartClick };\n};\n\nexport default useGame;\n","import { motion } from \"framer-motion\";\n\nconst SCALE_DURATION = 0.075;\nconst LINE_STAGGER = 0.225;\n\nconst Cross = () => {\n  return (\n    <motion.svg\n      width=\"100\"\n      height=\"100\"\n      viewBox=\"0 0 100 100\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      initial=\"hidden\"\n      animate=\"show\"\n    >\n      <motion.path\n        style={{ originX: 0, originY: 1, strokeDasharray: 117 }}\n        initial={{ strokeDashoffset: 116, scale: 0 }}\n        animate={{\n          strokeDashoffset: 0,\n          scale: 1,\n        }}\n        transition={{\n          strokeDashoffset: { delay: SCALE_DURATION },\n          scale: {\n            duration: SCALE_DURATION,\n          },\n        }}\n        d=\"M8.5 91.5L91.6919 8.6429\"\n        strokeWidth=\"16\"\n        strokeLinecap=\"round\"\n      />\n      <motion.path\n        style={{\n          originX: 0,\n          originY: 0,\n          strokeDasharray: 117,\n        }}\n        initial={{ strokeDashoffset: 116, scale: 0 }}\n        animate={{\n          strokeDashoffset: 0,\n          scale: 1,\n        }}\n        transition={{\n          strokeDashoffset: { delay: LINE_STAGGER + SCALE_DURATION },\n          scale: {\n            delay: LINE_STAGGER,\n            duration: SCALE_DURATION,\n          },\n        }}\n        d=\"M8.5 8.5L91.5 91.5\"\n        strokeWidth=\"16\"\n        strokeLinecap=\"round\"\n      />\n    </motion.svg>\n  );\n};\n\nexport default Cross;\n","import { motion } from \"framer-motion\";\n\nconst Zero = () => {\n  return (\n    <svg\n      width=\"100\"\n      height=\"100\"\n      viewBox=\"0 0 100 100\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0_1:22)\">\n        <motion.circle\n          style={{ strokeDasharray: 264, rotate: -90 }}\n          initial={{ scale: 0, strokeDashoffset: 264 }}\n          animate={{ scale: 1, strokeDashoffset: 0 }}\n          transition={{\n            scale: {\n              duration: 0.075,\n            },\n            strokeDashoffset: {\n              type: \"spring\",\n              mass: 10,\n              stiffness: 800,\n              damping: 200,\n              delay: 0.075,\n            },\n          }}\n          cx=\"50\"\n          cy=\"49.9999\"\n          r=\"42\"\n          strokeWidth=\"16\"\n          strokeLinecap=\"round\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_1:22\">\n          <rect width=\"100\" height=\"100\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport default Zero;\n","import { motion } from \"framer-motion\";\n\nimport { players } from \"../../app/constants\";\nimport useGame from \"../../hooks/useGame\";\n\nimport Cross from \"./Cross\";\nimport Zero from \"./Zero\";\n\nconst Board = () => {\n  const { cells, handleCellClick } = useGame();\n\n  return (\n    <motion.div\n      initial={{ y: \"100%\", opacity: 0 }}\n      animate={{ y: 0, opacity: 1 }}\n      exit={{ y: \"-100%\", opacity: 0 }}\n      className=\"board\"\n    >\n      {cells?.map((cell, i) => (\n        <div key={i} className=\"cell\" onClick={handleCellClick(i)}>\n          {cell === players.ZERO && <Zero />}\n          {cell === players.CROSS && <Cross />}\n        </div>\n      ))}\n    </motion.div>\n  );\n};\n\nexport default Board;\n","import React from \"react\";\nimport Board from \"./features/board/Board\";\nimport PlayerIndicator from \"./features/board/PlayerIndicator\";\nimport { AnimatePresence, motion, MotionConfig } from \"framer-motion\";\nimport useGame from \"./hooks/useGame\";\nimport { gameStates } from \"./app/constants\";\n\nconst Button = (props) => {\n  return (\n    <button\n      className=\"px-4 py-2 rounded-full bg-purple-500 hover:bg-purple-600 text-white\"\n      {...props}\n    />\n  );\n};\n\nconst headingVariants = {\n  show: {\n    transition: {\n      delayChildren: 0.2,\n      staggerChildren: 0.2,\n    },\n  },\n};\n\nconst spanVariants = {\n  hidden: {\n    opacity: 0,\n    y: 10,\n  },\n  show: {\n    opacity: 1,\n    y: 0,\n  },\n};\n\nconst StartScreen = () => {\n  const { handleStartClick } = useGame();\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      transition={{ duration: 0.4 }}\n    >\n      <motion.h1\n        variants={headingVariants}\n        initial={\"hidden\"}\n        animate={\"show\"}\n        className=\"text-7xl font-black flex\"\n      >\n        <motion.span className=\"flex mr-4\" variants={spanVariants}>\n          Tic\n        </motion.span>\n        <motion.span className=\"flex mr-4\" variants={spanVariants}>\n          Tac\n        </motion.span>\n        <motion.span className=\"flex mr-4\" variants={spanVariants}>\n          Toe\n        </motion.span>\n      </motion.h1>\n      <Button onClick={handleStartClick}>Start Game</Button>\n    </motion.div>\n  );\n};\n\nconst App = () => {\n  const { gameState } = useGame();\n  return (\n    <main>\n      <MotionConfig\n        transition={{\n          type: \"spring\",\n          mass: 10,\n          stiffness: 800,\n          damping: 200,\n          restDelta: 0.001,\n        }}\n      >\n        <AnimatePresence exitBeforeEnter>\n          {gameState === gameStates.START && <StartScreen key={1} />}\n          {gameState === gameStates.IN_PROGRESS && <Board key={2} />}\n        </AnimatePresence>\n      </MotionConfig>\n      {/* <PlayerIndicator /> */}\n    </main>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport boardReducer from \"../features/board/boardSlice\";\nimport gameStateReducer from \"../features/gameState/gameStateSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    board: boardReducer,\n    gameState: gameStateReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}